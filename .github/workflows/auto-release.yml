name: Auto Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: read

jobs:
  auto-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Extract PR labels
        id: pr-labels
        run: |
          # Get PR labels using GitHub CLI
          labels=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
            --jq '.labels[].name' | tr '\n' ' ' | xargs)
          
          # If CLI failed, fallback to GitHub context
          if [ -z "$labels" ]; then
            labels="${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          fi
          
          echo "labels=$labels" >> $GITHUB_OUTPUT
          
          # Determine version bump type based on PR labels (priority: major > minor > patch)
          bump_type="patch"  # Default to patch
          
          if [[ $labels == *"major"* ]]; then
            bump_type="major"
          elif [[ $labels == *"minor"* ]]; then
            bump_type="minor"
          elif [[ $labels == *"patch"* ]]; then
            bump_type="patch"
          fi
          
          echo "bump_type=$bump_type" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get PR commits
        id: pr-commits
        run: |
          # Get all commit messages from the merged PR
          commits=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits \
            --jq '.[].commit.message' | jq -R -s -c 'split("\n")[:-1]')
          echo "commits=$commits" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run auto-release script
        run: |
          node tools/release.js \
            --bump-type "${{ steps.pr-labels.outputs.bump_type }}" \
            --pr-number "${{ github.event.pull_request.number }}" \
            --pr-title "${{ github.event.pull_request.title }}" \
            --commits '${{ steps.pr-commits.outputs.commits }}'

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: Release v${{ env.NEW_VERSION }}
          body_path: RELEASE_NOTES.md
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit version bump and changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }} [skip ci]" || exit 0
          git push